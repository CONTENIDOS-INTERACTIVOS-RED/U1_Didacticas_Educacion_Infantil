{"remainingRequest":"/home/runner/work/U1_Didacticas_Educacion_Infantil/U1_Didacticas_Educacion_Infantil/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Didacticas_Educacion_Infantil/U1_Didacticas_Educacion_Infantil/src/views/curso/Tema2.vue?vue&type=template&id=5d317de5&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Didacticas_Educacion_Infantil/U1_Didacticas_Educacion_Infantil/src/views/curso/Tema2.vue","mtime":1746329519992},{"path":"/home/runner/work/U1_Didacticas_Educacion_Infantil/U1_Didacticas_Educacion_Infantil/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Didacticas_Educacion_Infantil/U1_Didacticas_Educacion_Infantil/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Didacticas_Educacion_Infantil/U1_Didacticas_Educacion_Infantil/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Didacticas_Educacion_Infantil/U1_Didacticas_Educacion_Infantil/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Didacticas_Educacion_Infantil/U1_Didacticas_Educacion_Infantil/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXJzby1tYWluLWNvbnRhaW5lci5wYi0zCiAgQmFubmVySW50ZXJubyg6c3ViVGl0dWxvPSInMi4gQ2FyYWN0ZXLDrXN0aWNhcyB5IHRpcG9zIGRlIGp1ZWdvcyB5IHJlY3JlYWNpw7NuJyIpCiAgLmNvbnRhaW5lci50YXJqZXRhLnRhcmpldGEtLWJsYW5jYS5wLTQucC1tZC01Lm92ZXJmbG93LWhpZGRlbgoKICAgIC5yb3cubWItNQogICAgICAuY29sLWxnLTQKICAgICAgICBmaWd1cmUKICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWEyLzEucG5nIiwgZGF0YS1hb3M9Inpvb20taW4iKQogICAgICAuY29sLWxnLTgKCiAgICAgICAgcChkYXRhLWFvcz0iZmFkZS1sZWZ0IikubWItNCBQYXJhIGluaWNpYXIgZXN0ZSBhcGFydGFkbywgbGVzIGludml0YW1vcyBhIGVzY3VjaGFyIGxhIHNpZ3VpZW50ZSBjb25mZXJlbmNpYSBzb2JyZSBsb3MgZWxlbWVudG9zIGRlbCBqdWVnbyBlbiBsYSBlZHVjYWNpw7NuIGluZmFudGlsOgoKCgogICAgICAgIC5iZy1jb2xvci13aGl0ZS5zaGFkb3ctc29mdC5weS00LnB4LWxnLTUubWItNAogICAgICAgICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtYXJvdW5kLmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgICAgICAuY29sLW1kLWF1dG8KICAgICAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy90ZW1wbGF0ZS9iZy1pY29uby12aWRlby5zdmciLCBzdHlsZT0id2lkdGg6IDkwcHg7IikKICAgICAgICAgICAgLmNvbAogICAgICAgICAgICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWJldHdlZW4uYWxpZ24taXRlbXMtY2VudGVyCiAgICAgICAgICAgICAgICAuY29sLm1iLTMubWItc20tMAogICAgICAgICAgICAgICAgICBoMy5tYi0xIEp1Z2FyIHkgZW5zZcOxYXIgYSBqdWdhcgogICAgICAgICAgICAgICAgICBwIFBhcmEgcHJvZnVuZGl6YXIgZW4gZWwgdGVtYSBkZSBqdWdhciB5IGVuc2XDsWFyIGEganVnYXIsIHNlIHJlY29taWVuZGEgdmVyIGVsIHNpZ3VpZW50ZSB2aWRlbzoKICAgICAgICAgICAgICAgIC5jb2wtc20tYXV0bwogICAgICAgICAgICAgICAgICBhLmJvdG9uLmNvbG9yLXNlY3VuZGFyaW8oaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj11dUJ3Nm9RSVZRVSIgdGFyZ2V0PSJfYmxhbmsiKQogICAgICAgICAgICAgICAgICAgIHNwYW4gVmVyIHZpZGVvCiAgICAgICAgICAgICAgICAgICAgaS5mYXMuZmEtYXJyb3ctcmlnaHQKICAgICAgICAKICAgIAogICAgICAgIC5iZy1jb2xvci0xLnAtNChkYXRhLWFvcz0iZmFkZS1sZWZ0IikKICAgICAgICAgIHAubWItMCBFbCBqdWVnbyBlcyB1bmEgYWN0aXZpZGFkIG1vdHJpeiB5IG5hdHVyYWwgZW4gbmnDsW9zIHkgasOzdmVuZXMuIEEgdHJhdsOpcyBkZSDDqWwsIHNlIHJlYWxpemFuIG1vdmltaWVudG9zIGluc3RpbnRpdm9zIHkgc2UgZW1wbGVhIGxhIGVuZXJnw61hIGRlIGZvcm1hIGVzcG9udMOhbmVhLCBsbyBxdWUgY29udHJpYnV5ZSBhbCBkZXNhcnJvbGxvIGludGVncmFsIGRlIGxhIHBlcnNvbmEgKEdhcmPDrWEgRmVybsOhbmRleiwgMjAxNikuIFNlIGNvbnNpZGVyYSBsYSBvY3VwYWNpw7NuIG5vcm1hbCBkZWwgbmnDsW8sIGNvbXBhcmFibGUgYWwgdHJhYmFqbyBlbiBlbCBhZHVsdG8uIFBhcmEgbGEgaW5mYW5jaWEsIGVzIHVuYSBhY3RpdmlkYWQgc2VyaWE7IHBhcmEgZWwgam92ZW4sIHVuYSBkaXN0cmFjY2nDs24gcGxhY2VudGVyYTsgeSBwYXJhIGVsIGFkdWx0bywgdW5hIGZvcm1hIGRlIGRlc2NvbmV4acOzbi4KICAgIAoKICAgIHAoZGF0YS1hb3M9ImZhZGUtbGVmdCIpLm1iLTQgRGVzZGUgdW5hIHBlcnNwZWN0aXZhIGVkdWNhdGl2YSwgZWwganVlZ28gZmF2b3JlY2UgZWwgZGVzYXJyb2xsbyBjb2duaXRpdm8sIG1vdHJpeiB5IGFmZWN0aXZvLCBmYWNpbGl0YSBsYSBzb2NpYWxpemFjacOzbiB5IGxhIGludGVyYWNjacOzbiBjb24gZWwgZW50b3JubywgZXN0aW11bGEgbGEgY3JlYXRpdmlkYWQgeSBsYSBpbWFnaW5hY2nDs24sIHkgcHJlZGljZSBwYXRyb25lcyBkZSBjb21wb3J0YW1pZW50byBmdXR1cm8gYSBwYXJ0aXIgZGUgbGEgbWFuZXJhIGVuIHF1ZSBsb3MgbmnDsW9zIGp1ZWdhbi4KCiAgICAjdF8yXzEudGl0dWxvLXNlZ3VuZG8oZGF0YS1hb3M9ImZsaXAtdXAiKQogICAgICBoMiAjW3NwYW4gMi4xXSBDYXJhY3RlcsOtc3RpY2FzIGRlbCBqdWVnbwoKICAgICAgICAKICAgICAgICAKICAgIHAoZGF0YS1hb3M9ImZhZGUtbGVmdCIpLm1iLTQgU2Vnw7puIEdhcmPDrWEgRmVybsOhbmRleiAoMjAxNiksIGVsIGp1ZWdvIHByZXNlbnRhIGxhcyBzaWd1aWVudGVzIGNhcmFjdGVyw61zdGljYXM6CgoKICAgIC5iZy1mdWxsLXdpZHRoLTIuYmctZm9uZG8tNAogICAgICAucHgtNC5weC1tZC01CgoKICAgICAgICAucm93LmFsaWduLWl0ZW1zLWNlbnRlci5tYi01CiAgICAgICAgICAuY29sLWxnLTgub3JkZXItMi5vcmRlci1sZy0xCgogICAgICAgIAogICAgICAgICAgICBMaW5lYVRpZW1wb0QuY29sb3ItcHJpbWFyaW8ubGFyZ2UoZGF0YS1hb3M9ImZhZGUtcmlnaHQiKQogICAgICAgICAgICAgIGRpdihudW1lcm89IjEiIHRpdHVsbz0iQWN0aXZpZGFkIGxpYnJlIHkgdm9sdW50YXJpYSIpCiAgICAgICAgICAgICAgICBwIE5hZGllIGVzdMOhIG9ibGlnYWRvIGEganVnYXIsIHN1cmdlIGRlbCBkZXNlbyBkZWwgcGFydGljaXBhbnRlLgoKICAgICAgICAgICAgICAgIHAgI1tzdHJvbmcgRWplbXBsbzpdIFVuIG5pw7FvIGRlY2lkZSBzaSBqdWdhciBhbCBmw7p0Ym9sIGVuIGVsIHJlY3JlbyBvIGxlZXIgdW4gbGlicm8uCgogICAgICAgICAgICAgIGRpdihudW1lcm89IjIiIHRpdHVsbz0iTGltaXRhY2lvbmVzIGVzcGFjaWFsZXMgeSB0ZW1wb3JhbGVzIikKICAgICAgICAgICAgICAgIHAgTG9zIGp1ZWdvcyBzdWVsZW4gdGVuZXIgdW4gZXNwYWNpbyB5IHVuIHRpZW1wbyBkZWxpbWl0YWRvcy4KCiAgICAgICAgICAgICAgICBwICNbc3Ryb25nIEVqZW1wbG86XSBVbiBwYXJ0aWRvIGRlIGbDunRib2wgdGllbmUgdW4gY2FtcG8gZXNwZWPDrWZpY28geSB1biB0aWVtcG8gZXN0YWJsZWNpZG8uCgogICAgICAgICAgICAgIGRpdihudW1lcm89IjMiIHRpdHVsbz0iQ2Fyw6FjdGVyIGluY2llcnRvIHkgY3JlYXRpdm8iKQogICAgICAgICAgICAgICAgcCBTdSByZXN1bHRhZG8gZXMgaW1wcmVkZWNpYmxlLCBsbyBxdWUgbG8gaGFjZSBlbW9jaW9uYW50ZSB5IGVzcG9udMOhbmVvLgoKICAgICAgICAgICAgICAgIHAgI1tzdHJvbmcgRWplbXBsbzpdIEVuIHVuIGp1ZWdvIGRlIGNhcnRhcywgbm8gc2Ugc2FiZSBxdcOpIGNhcnRhcyB0b2NhcsOhbiBhIGNhZGEganVnYWRvci4KCiAgICAgICAgICAgICAgZGl2KG51bWVybz0iNCIgdGl0dWxvPSJQdXJvIHkgZ3JhdHVpdG8iKQogICAgICAgICAgICAgICAgcCBTZSBqdWVnYSBwb3IgZWwgcGxhY2VyIGRlIGp1Z2FyLCBzaW4gdW4gb2JqZXRpdm8gZXh0ZXJuby4KCiAgICAgICAgICAgICAgICBwICNbc3Ryb25nIEVqZW1wbG86XSBVbiBuacOxbyBpbnZlbnRhIGhpc3RvcmlhcyBjb24gc3VzIG11w7FlY29zIHNpbiBlc3BlcmFyIHJlY29tcGVuc2EuCgogICAgICAgICAgICAgIGRpdihudW1lcm89IjUiIHRpdHVsbz0iRmljdGljaW8iKQogICAgICAgICAgICAgICAgcCBDcmVhIHVuIG11bmRvIGltYWdpbmFyaW8gZGlmZXJlbnRlIGEgbGEgdmlkYSBjb3RpZGlhbmEuCgogICAgICAgICAgICAgICAgcCAjW3N0cm9uZyBFamVtcGxvOl0gVW4gZ3J1cG8gZGUgbmnDsW9zIGp1ZWdhIGEgc2VyIHBpcmF0YXMgY29uIHVuIGJhcmNvIGltYWdpbmFyaW8uCgogICAgICAgICAgICAgIGRpdihudW1lcm89IjYiIHRpdHVsbz0iQ29udmVuY2lvbmFsIikKICAgICAgICAgICAgICAgIHAgRW4ganVlZ29zIGNvbGVjdGl2b3MsIHNlIGVzdGFibGVjZW4gcmVnbGFzIGRlIGNvbcO6biBhY3VlcmRvLgoKICAgICAgICAgICAgICAgIHAgI1tzdHJvbmcgRWplbXBsbzpdIFVuIGdydXBvIGRlIGFtaWdvcyBkZWNpZGUgbGFzIHJlZ2xhcyBkZSB1biBwYXJ0aWRvIGRlIGJhbG9uY2VzdG8uCiAgICAgICAgICAgIAogICAgICAgICAgLmNvbC1sZy00Lm9yZGVyLTEub3JkZXItbGctMgogICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hMi8yLnBuZyIsIGFsdD0iIiwgZGF0YS1hb3M9Inpvb20taW4iKS5tYi00Lm1iLWxnLTAKICAgIAoKICAgICAgICAucm93LmFsaWduLWl0ZW1zLWNlbnRlci5qdXN0aWZ5LWNvbnRlbnQtYXJvdW5kLm1iLTUKICAgICAgICAgIC5jb2wtbGctOQoKICAgICAgICAgICAgLmJnLWNvbG9yLXdoaXRlLnNoYWRvdy1zb2Z0LnB5LTQucHgtbGctNQogICAgICAgICAgICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWFyb3VuZC5hbGlnbi1pdGVtcy1jZW50ZXIKICAgICAgICAgICAgICAgIC5jb2wtbWQtYXV0bwogICAgICAgICAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy90ZW1wbGF0ZS9iZy1pY29uby1saW5rLnN2ZyIsIHN0eWxlPSJ3aWR0aDogOTBweDsiKQogICAgICAgICAgICAgICAgLmNvbAogICAgICAgICAgICAgICAgICAucm93Lmp1c3RpZnktY29udGVudC1iZXR3ZWVuLmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgICAgICAgICAgICAgIC5jb2wubWItMy5tYi1zbS0wCiAgICAgICAgICAgICAgICAgICAgICBoMy5tYi0xIEVsIGp1ZWdvIGNvbW8gZXN0cmF0ZWdpYSBkaWTDoWN0aWNhIHBhcmEgZm9ydGFsZWNlciBlbCBwZW5zYW1pZW50byBsw7NnaWNvLW1hdGVtw6F0aWNvCiAgICAgICAgICAgICAgICAgICAgICBwIFBhcmEgcHJvZnVuZGl6YXIgZW4gZWwgdXNvIGRlbCBqdWVnbyBjb21vIGVzdHJhdGVnaWEgZGlkw6FjdGljYSwgc2UgcmVjb21pZW5kYSBjb25zdWx0YXIgZWwgc2lndWllbnRlIGFydMOtY3VsbzogCiAgICAgICAgICAgICAgICAgICAgLmNvbC1zbS1hdXRvCiAgICAgICAgICAgICAgICAgICAgICBhLmJvdG9uLmNvbG9yLWFjZW50by1ib3RvbmVzLnRleHRvLWJsYW5jbyhocmVmPSJodHRwczovL29qcy51bmlwYW1wbG9uYS5lZHUuY28vaW5kZXgucGhwL2NpZS9hcnRpY2xlL2Rvd25sb2FkLzE1MDMvNjg4OCIgdGFyZ2V0PSJfYmxhbmsiKQogICAgICAgICAgICAgICAgICAgICAgICBzcGFuIElyIGFsIHNpdGlvCiAgICAgICAgICAgICAgICAgICAgICAgIGkuZmFzLmZhLWFycm93LXJpZ2h0CiAgICAgICAgICAgIAoKICAgICN0XzJfMi50aXR1bG8tc2VndW5kbyhkYXRhLWFvcz0iZmxpcC11cCIpCiAgICAgIGgyICNbc3BhbiAyLjJdIFRpcG9zIGRlIGp1ZWdvcwogICAgCiAgICBwKGRhdGEtYW9zPSJmYWRlLWxlZnQiKS5tYi00IEV4aXN0ZW4gZGl2ZXJzYXMgY2xhc2lmaWNhY2lvbmVzIGRlbCBqdWVnby4gR2FyY8OtYSBGZXJuw6FuZGV6ICgyMDE2KSBwbGFudGVhIGxhcyBzaWd1aWVudGVzOgoKCiAgICAuYmctZnVsbC13aWR0aC5iZy1mb25kby0yCiAgICAgIC5weC00LnB4LW1kLTUucGItbWQtMwogICAgICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlci5tYi01CiAgICAgICAgICAuY29sLWxnLTQKICAgICAgICAgICAgZmlndXJlCiAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYTIvMy5wbmcnLCBhbHQ9JycpCiAgICAKCiAgICAgICAgICAuY29sLWxnLTgKCiAgICAKICAgICAgICAgICAgU2x5ZGVyRihjb2x1bW5hcz0iY29sLTEyIGNvbC1sZy02IikKICAgICAgICAgICAgICAuYmctY29sb3Itd2hpdGUucC00LmgtMTAwLnNoYWRvdy1hcHAuYm9yZGVzCiAgICAgICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hMi80LnN2ZycgYWx0PSdKdWVnbyBsaWJyZScgc3R5bGU9Im1heC13aWR0aDogOTBweCIpLm14LWF1dG8ubWItMwogICAgICAgICAgICAgICAgaDQudGV4dC1jZW50ZXIubWItNCBKdWVnbyBsaWJyZQogICAgICAgICAgICAgICAgcC50ZXh0LWNlbnRlciBObyBzaWd1ZSByZWdsYXMgZmlqYXMsIGxvcyBuacOxb3MgZGVjaWRlbiBjw7NtbyBqdWdhci4KICAgICAgICAgICAgICAgIHAudGV4dC1jZW50ZXIgI1tzdHJvbmcgRWplbXBsbzpdIENvbnN0cnVjY2nDs24gZGUgdW4gY2FzdGlsbG8gZGUgYXJlbmEgc2luIGluc3RydWNjaW9uZXMuCgogICAgICAgICAgICAgIC5iZy1jb2xvci13aGl0ZS5wLTQuaC0xMDAuc2hhZG93LWFwcC5ib3JkZXMKICAgICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWEyLzUuc3ZnJyBhbHQ9J0p1ZWdvIGRlIHJlZ2xhcycgc3R5bGU9Im1heC13aWR0aDogOTBweCIpLm14LWF1dG8ubWItMwogICAgICAgICAgICAgICAgaDQudGV4dC1jZW50ZXIubWItNCBKdWVnbyBkZSByZWdsYXMKICAgICAgICAgICAgICAgIHAudGV4dC1jZW50ZXIgUG9zZWUgbm9ybWFzIGVzdGFibGVjaWRhcyBwYXJhIG9yZ2FuaXphciBsYSBhY3RpdmlkYWQuCiAgICAgICAgICAgICAgICBwLnRleHQtY2VudGVyICNbc3Ryb25nIEVqZW1wbG86XSBVbiBwYXJ0aWRvIGRlIGbDunRib2wgY29uIHJlZ2xhcyBvZmljaWFsZXMuCgogICAgICAgICAgICAgIC5iZy1jb2xvci13aGl0ZS5wLTQuaC0xMDAuc2hhZG93LWFwcC5ib3JkZXMKICAgICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWEyLzYuc3ZnJyBhbHQ9J0p1ZWdvIGVzcG9udMOhbmVvJyBzdHlsZT0ibWF4LXdpZHRoOiA5MHB4IikubXgtYXV0by5tYi0zCiAgICAgICAgICAgICAgICBoNC50ZXh0LWNlbnRlci5tYi00IEp1ZWdvIGVzcG9udMOhbmVvCiAgICAgICAgICAgICAgICBwLnRleHQtY2VudGVyIFN1cmdlIGRlIGxvcyBwcm9waW9zIGludGVyZXNlcyBkZSBsb3MgcGFydGljaXBhbnRlcy4KICAgICAgICAgICAgICAgIHAudGV4dC1jZW50ZXIgI1tzdHJvbmcgRWplbXBsbzpdIFVuIG5pw7FvIGVuY3VlbnRyYSB1bmEgY2FqYSB5IGxhIHVzYSBjb21vIGNvY2hlIGltYWdpbmFyaW8uCgogICAgICAgICAgICAgIC5iZy1jb2xvci13aGl0ZS5wLTQuaC0xMDAuc2hhZG93LWFwcC5ib3JkZXMKICAgICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWEyLzcuc3ZnJyBhbHQ9J0p1ZWdvIGRpcmlnaWRvJyBzdHlsZT0ibWF4LXdpZHRoOiA5MHB4IikubXgtYXV0by5tYi0zCiAgICAgICAgICAgICAgICBoNC50ZXh0LWNlbnRlci5tYi00IEp1ZWdvIGRpcmlnaWRvCiAgICAgICAgICAgICAgICBwLnRleHQtY2VudGVyIFRpZW5lIHVuIG1lZGlhZG9yIHF1ZSBlc3RhYmxlY2UgcmVnbGFzIHkgb2JqZXRpdm9zLgogICAgICAgICAgICAgICAgcC50ZXh0LWNlbnRlciAjW3N0cm9uZyBFamVtcGxvOl0gVW4gcHJvZmVzb3Igb3JnYW5pemEgdW5hIHNlc2nDs24gZGUganVlZ29zIGNvb3BlcmF0aXZvcy4KCiAgICAgICAgICAgICAgLmJnLWNvbG9yLXdoaXRlLnAtNC5oLTEwMC5zaGFkb3ctYXBwLmJvcmRlcwogICAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYTIvOC5zdmcnIGFsdD0nSnVlZ28gc2ltYsOzbGljbycgc3R5bGU9Im1heC13aWR0aDogOTBweCIpLm14LWF1dG8ubWItMwogICAgICAgICAgICAgICAgaDQudGV4dC1jZW50ZXIubWItNCBKdWVnbyBzaW1iw7NsaWNvCiAgICAgICAgICAgICAgICBwLnRleHQtY2VudGVyIExvcyBwYXJ0aWNpcGFudGVzIHJlcHJlc2VudGFuIHNpdHVhY2lvbmVzIHJlYWxlcyBvIGZpY3RpY2lhcy4KICAgICAgICAgICAgICAgIHAudGV4dC1jZW50ZXIgI1tzdHJvbmcgRWplbXBsbzpdIE5pw7FvcyBqdWdhbmRvIGEgbGEgY2FzaXRhIGFzdW1pZW5kbyByb2xlcyBmYW1pbGlhcmVzLgoKICAgICAgICAgICAgICAuYmctY29sb3Itd2hpdGUucC00LmgtMTAwLnNoYWRvdy1hcHAuYm9yZGVzCiAgICAgICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hMi85LnN2ZycgYWx0PSdKdWVnbyBjcmVhdGl2bycgc3R5bGU9Im1heC13aWR0aDogOTBweCIpLm14LWF1dG8ubWItMwogICAgICAgICAgICAgICAgaDQudGV4dC1jZW50ZXIubWItNCBKdWVnbyBjcmVhdGl2bwogICAgICAgICAgICAgICAgcC50ZXh0LWNlbnRlciBFc3RpbXVsYSBsYSBjYXBhY2lkYWQgZGUgaW52ZW50YXIgeSBkaXNlw7FhciBhbGdvIG51ZXZvLgogICAgICAgICAgICAgICAgcC50ZXh0LWNlbnRlciAjW3N0cm9uZyBFamVtcGxvOl0gVW4gbmnDsW8gY29uc3RydXllIHVuYSBtYXF1ZXRhIGNvbiBtYXRlcmlhbGVzIHJlY2ljbGFkb3MuCgogICAgICAgICAgICAgIC5iZy1jb2xvci13aGl0ZS5wLTQuaC0xMDAuc2hhZG93LWFwcC5ib3JkZXMKICAgICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWEyLzEwLnN2ZycgYWx0PSdKdWVnbyBpbWFnaW5hdGl2bycgc3R5bGU9Im1heC13aWR0aDogOTBweCIpLm14LWF1dG8ubWItMwogICAgICAgICAgICAgICAgaDQudGV4dC1jZW50ZXIubWItNCBKdWVnbyBpbWFnaW5hdGl2bwogICAgICAgICAgICAgICAgcC50ZXh0LWNlbnRlciBTZSBiYXNhIGVuIGxhIGZhbnRhc8OtYSB5IGxhIHJlcHJlc2VudGFjacOzbiBkZSBpbcOhZ2VuZXMgbWVudGFsZXMuCiAgICAgICAgICAgICAgICBwLnRleHQtY2VudGVyICNbc3Ryb25nIEVqZW1wbG86XSBVbiBuacOxbyBqdWVnYSBhIHNlciB1biBzdXBlcmjDqXJvZSBxdWUgc2FsdmEgZWwgbXVuZG8uCgogICAgICAgICAgICAgIC5iZy1jb2xvci13aGl0ZS5wLTQuaC0xMDAuc2hhZG93LWFwcC5ib3JkZXMKICAgICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWEyLzExLnN2ZycgYWx0PSdKdWVnbyBzZW5zb21vdG9yJyBzdHlsZT0ibWF4LXdpZHRoOiA5MHB4IikubXgtYXV0by5tYi0zCiAgICAgICAgICAgICAgICBoNC50ZXh0LWNlbnRlci5tYi00IEp1ZWdvIHNlbnNvbW90b3IKICAgICAgICAgICAgICAgIHAudGV4dC1jZW50ZXIgRXN0aW11bGEgbG9zIHNlbnRpZG9zIG1lZGlhbnRlIGxhIGV4cGxvcmFjacOzbiB5IGVsIG1vdmltaWVudG8uCiAgICAgICAgICAgICAgICBwLnRleHQtY2VudGVyICNbc3Ryb25nIEVqZW1wbG86XSBVbiBiZWLDqSB0b2NhIGRpZmVyZW50ZXMgdGV4dHVyYXMgeSBleHBsb3JhIG9iamV0b3MuCgogICAgICAgICAgICAgIC5iZy1jb2xvci13aGl0ZS5wLTQuaC0xMDAuc2hhZG93LWFwcC5ib3JkZXMKICAgICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWEyLzEyLnN2ZycgYWx0PSdKdWVnbyBwc2ljb21vdG9yJyBzdHlsZT0ibWF4LXdpZHRoOiA5MHB4IikubXgtYXV0by5tYi0zCiAgICAgICAgICAgICAgICBoNC50ZXh0LWNlbnRlci5tYi00IEp1ZWdvIHBzaWNvbW90b3IKICAgICAgICAgICAgICAgIHAudGV4dC1jZW50ZXIgUmVxdWllcmUgY29vcmRpbmFjacOzbiBlbnRyZSBtb3ZpbWllbnRvIHkgcGVuc2FtaWVudG8uCiAgICAgICAgICAgICAgICBwLnRleHQtY2VudGVyICNbc3Ryb25nIEVqZW1wbG86XSBVbiBuacOxbyBjb25zdHJ1eWUgdG9ycmVzIGRlIGJsb3F1ZXMgZXF1aWxpYnLDoW5kb2xvcy4KCiAgICAgICAgICAgICAgLmJnLWNvbG9yLXdoaXRlLnAtNC5oLTEwMC5zaGFkb3ctYXBwLmJvcmRlcwogICAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYTIvMTMuc3ZnJyBhbHQ9J0p1ZWdvIGRlIHJpdG1vJyBzdHlsZT0ibWF4LXdpZHRoOiA5MHB4IikubXgtYXV0by5tYi0zCiAgICAgICAgICAgICAgICBoNC50ZXh0LWNlbnRlci5tYi00IEp1ZWdvIGRlIHJpdG1vCiAgICAgICAgICAgICAgICBwLnRleHQtY2VudGVyIFNpZ3VlIHBhdHJvbmVzIGRlIHNvbmlkb3MgeSBtb3ZpbWllbnRvcy4KICAgICAgICAgICAgICAgIHAudGV4dC1jZW50ZXIgI1tzdHJvbmcgRWplbXBsbzpdIE5pw7FhcyBqdWdhbmRvIGEgbGFzIHBhbG1hZGFzIGNvbiB1bmEgc2VjdWVuY2lhIHLDrXRtaWNhLgoKICAgICAgICAgICAgICAuYmctY29sb3Itd2hpdGUucC00LmgtMTAwLnNoYWRvdy1hcHAuYm9yZGVzCiAgICAgICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hMi8xNC5zdmcnIGFsdD0nSnVlZ28gY29uIG3DunNpY2EnIHN0eWxlPSJtYXgtd2lkdGg6IDkwcHgiKS5teC1hdXRvLm1iLTMKICAgICAgICAgICAgICAgIGg0LnRleHQtY2VudGVyLm1iLTQgSnVlZ28gY29uIG3DunNpY2EKICAgICAgICAgICAgICAgIHAudGV4dC1jZW50ZXIgU2UgYWNvbXBhw7FhIGRlIHNvbmlkb3MgbyBjYW5jaW9uZXMuCiAgICAgICAgICAgICAgICBwLnRleHQtY2VudGVyICNbc3Ryb25nIEVqZW1wbG86XSBOacOxb3MganVnYW5kbyBhbCBsaW1ibyBjb24gbcO6c2ljYSBkZSBmb25kby4KCiAgICAgICAgICAgICAgLmJnLWNvbG9yLXdoaXRlLnAtNC5oLTEwMC5zaGFkb3ctYXBwLmJvcmRlcwogICAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYTIvMTUuc3ZnJyBhbHQ9J0p1ZWdvIGRlIGNvbnN0cnVjY2nDs24nIHN0eWxlPSJtYXgtd2lkdGg6IDkwcHgiKS5teC1hdXRvLm1iLTMKICAgICAgICAgICAgICAgIGg0LnRleHQtY2VudGVyLm1iLTQgSnVlZ28gZGUgY29uc3RydWNjacOzbgogICAgICAgICAgICAgICAgcC50ZXh0LWNlbnRlciBJbXBsaWNhIG1hbmlwdWxhciBvYmpldG9zIHBhcmEgY3JlYXIgZXN0cnVjdHVyYXMuCiAgICAgICAgICAgICAgICBwLnRleHQtY2VudGVyICNbc3Ryb25nIEVqZW1wbG86XSBDb25zdHJ1Y2Npw7NuIGRlIGNhc2FzIGNvbiBibG9xdWVzIGRlIG1hZGVyYS4KCiAgICBQIEVsIGp1ZWdvIHZhcsOtYSBzZWfDum4gbGEgZXRhcGEgZGUgdmlkYSBlbiBsYSBxdWUgc2UgZW5jdWVudHJlIGVsIGluZGl2aWR1by4gU2UgcHVlZGVuIGlkZW50aWZpY2FyIGRpZmVyZW50ZXMgZW5mb3F1ZXMgc2Vnw7puIGxhIGVkYWQgeSBsb3MgaW50ZXJlc2VzIGRlIGxvcyBwYXJ0aWNpcGFudGVzLgoKCiAgICAuYmctZnVsbC13aWR0aC5iZy1jb2xvci1pbmZvLm1iLTUKICAgICAgLnAtNC5wLW1kLTUKICAgICAgICAucm93Lmp1c3RpZnktY29udGVudC1jZW50ZXIuYWxpZ24taXRlbXMtY2VudGVyLm1iLTUKICAgICAgICAgIC5jb2wtbGctMTAKICAgICAgICAgICAgSW1hZ2VuSW5mb2dyYWZpY2EuY29sb3Itc2VjdW5kYXJpbwogICAgICAgICAgICAgIHRlbXBsYXRlKHYtc2xvdDppbWFnZW4pCiAgICAgICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYTIvaW5mbzEucG5nJywgYWx0PScnLCBzdHlsZT0ibWF4LXdpZHRoOiA2NDJweDsiKS5teC1hdXRvCiAgICAKICAgICAgICAgICAgICAuYmctY29sb3Itd2hpdGUuYm94LXNoYWRvdy5wLTMoeD0iNDIlIiB5PSI5JSIgbnVtZXJvPSIxIikKICAgICAgICAgICAgICAgIGg1IEp1ZWdvIGluZmFudGlsICgwLTEyIGHDsW9zKQogICAgICAgICAgICAgICAgcCBQcmVkb21pbmEgbGEgaW1hZ2luYWNpw7NuIHkgbGEgZmFudGFzw61hLiBFamVtcGxvOiBVbiBuacOxbyBqdWVnYSBjb24gbXXDsWVjb3MgYXN1bWllbmRvIGRpc3RpbnRvcyByb2xlcy4KICAgIAogICAgICAgICAgICAgIC5iZy1jb2xvci13aGl0ZS5ib3gtc2hhZG93LnAtMyh4PSI3MSUiIHk9IjM4JSIgbnVtZXJvPSIyIikKICAgICAgICAgICAgICAgIGg1IEp1ZWdvIGRlIGrDs3ZlbmVzICgxMi0xOCBhw7FvcykKICAgICAgICAgICAgICAgIHAgU2Ugb3JpZW50YSBhIGxhIGNvbXBldGVuY2lhIHkgbGEgZGVtb3N0cmFjacOzbiBkZSBoYWJpbGlkYWRlcy4gRWplbXBsbzogVW4gcGFydGlkbyBkZSBiYWxvbmNlc3RvIGVudHJlIGFkb2xlc2NlbnRlcy4KICAgIAogICAgICAgICAgICAgIC5iZy1jb2xvci13aGl0ZS5ib3gtc2hhZG93LnAtMyh4PSI1OSUiIHk9IjgwJSIgbnVtZXJvPSIzIikKICAgICAgICAgICAgICAgIGg1IEp1ZWdvIGRlIGFkdWx0b3MgKDE4LTYwIGHDsW9zKQogICAgICAgICAgICAgICAgcCBQdWVkZSBpbmNsdWlyIGNvbXBldGVuY2lhLCBwZXJvIHN1IGZpbiBlcyBlbCBvY2lvIHkgbGEgcmVsYWphY2nDs24uIEVqZW1wbG86IFVuIGdydXBvIGRlIGFtaWdvcyBqdWVnYSBjYXJ0YXMuCiAgICAKICAgICAgICAgICAgICAuYmctY29sb3Itd2hpdGUuYm94LXNoYWRvdy5wLTMoeD0iMjklIiB5PSI1NSUiIG51bWVybz0iNCIpCiAgICAgICAgICAgICAgICBoNSBKdWVnbyBlbiBsYSBzZW5lY3R1ZCAoKzYwIGHDsW9zKQogICAgICAgICAgICAgICAgcCBTZSBwcmlvcml6YSBsYSBpbnRlcmFjY2nDs24gc29jaWFsIHNvYnJlIGxhIGFjdGl2aWRhZCBmw61zaWNhLiBFamVtcGxvOiBVbiBncnVwbyBkZSBhZHVsdG9zIG1heW9yZXMganVlZ2EgYWwgZG9taW7Dsy4KICAgIAoKCiAgICAucm93Lmp1c3RpZnktY29udGVudC1jZW50ZXIuYWxpZ24taXRlbXMtY2VudGVyLm1iLTUKICAgICAgLmNvbC1sZy05CiAgICAgICAgLmJnLWNvbG9yLXdoaXRlLnNoYWRvdy1zb2Z0LnB5LTQucHgtbGctNQogICAgICAgICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtYXJvdW5kLmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgICAgICAuY29sLW1kLWF1dG8KICAgICAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy90ZW1wbGF0ZS9iZy1pY29uby1saW5rLnN2ZyIsIHN0eWxlPSJ3aWR0aDogOTBweDsiKQogICAgICAgICAgICAuY29sCiAgICAgICAgICAgICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtYmV0d2Vlbi5hbGlnbi1pdGVtcy1jZW50ZXIKICAgICAgICAgICAgICAgIC5jb2wubWItMy5tYi1zbS0wCiAgICAgICAgICAgICAgICAgIGgzLm1iLTEgVGlwb3MgZGUganVlZ28KICAgICAgICAgICAgICAgICAgcCBBIGNvbnRpbnVhY2nDs24sIHNlIHJlY29taWVuZGEgY29uc3VsdGFyIGVsIHNpZ3VpZW50ZSBzaXRpbyB3ZWIgcGFyYSBwcm9mdW5kaXphciBlbiBvdHJvcyB0aXBvcyBkZSBqdWVnbzoKCiAgICAgICAgICAgICAgICAuY29sLXNtLWF1dG8KICAgICAgICAgICAgICAgICAgYS5ib3Rvbi5jb2xvci1hY2VudG8tYm90b25lcy50ZXh0by1ibGFuY28oaHJlZj0iaHR0cHM6Ly9udWV2YWVzY3VlbGFtZXhpY2FuYS5vcmcvdGlwb3MtZGUtanVlZ28vIiB0YXJnZXQ9Il9ibGFuayIpCiAgICAgICAgICAgICAgICAgICAgc3BhbiBJciBhbCBzaXRpbwogICAgICAgICAgICAgICAgICAgIGkuZmFzLmZhLWFycm93LXJpZ2h0CgoKCiAgICAuYmctZnVsbC13aWR0aC5iZy1jb2xvci0zCiAgICAgIC5wLTQucC1tZC01CiAgICAgICAgcC5tYi0wIEVsIGp1ZWdvIG5vIGVzIHNvbG8gdW5hIGFjdGl2aWRhZCByZWNyZWF0aXZhLCBzaW5vIHVuYSBoZXJyYW1pZW50YSBmdW5kYW1lbnRhbCBlbiBlbCBkZXNhcnJvbGxvIGluZmFudGlsLiBTdSBwcsOhY3RpY2EgZm9tZW50YSBlbCBhcHJlbmRpemFqZSwgbGEgY3JlYXRpdmlkYWQgeSBsYSBzb2NpYWxpemFjacOzbiwgYWRlbcOhcyBkZSBjb250cmlidWlyIGFsIGJpZW5lc3RhciBmw61zaWNvIHkgZW1vY2lvbmFsLiBTdSBpbmZsdWVuY2lhIHNlIGV4dGllbmRlIGEgbG8gbGFyZ28gZGUgbGEgdmlkYSwgcHJvcG9yY2lvbmFuZG8gYmVuZWZpY2lvcyBlbiBjYWRhIGV0YXBhIGRlbCBkZXNhcnJvbGxvLgogICAgCiAgICAKCiAgICAuYmctZnVsbC13aWR0aC5ib3JkZXItdG9wLmNvbG9yLXByaW1hcmlvCiAgICAgIC5wLTQucC1tZC01CiAgICAgICAgaDIoZGF0YS1hb3M9ImZhZGUtbGVmdCIpIE1BVEVSSUFMIENPTVBMRU1FTlRBUklPCiAgICAgICAgLnJvdy5tYXRlcmlhbC1jb21wbGVtZW50YXJpbwogICAgICAgICAgLmNvbC0xMi5jb2wtbWQtNi5jb2wtbGctNwogICAgICAgICAgICBwIExvcyBpbnZpdGFtb3MgYSBleHBsb3JhciBlbCBtYXRlcmlhbCBjb21wbGVtZW50YXJpbyBkZSBlc3RlIGN1cnNvLCBlbiBlc3RhIHNlY2Npw7NuIGVuY29udHJhcsOhIHJlY3Vyc29zIHF1ZSBsZSBwZXJtaXRpcsOhbiBwcm9mdW5kaXphciAgeSBlbnJpcXVlY2VyIHN1IGFwcmVuZGl6YWplIGVuIGxvcyB0ZW1hcyB0cmF0YWRvcyBlbiBlc3RhIHVuaWRhZC4KCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnJyA6c3R5bGU9InsnbWF4LXdpZHRoJzonMTZweCd9IikKICAgICAgICAgICAgICBhKGhyZWY9Imh0dHBzOi8vbWluZWR1Y2FjaW9uLmdvdi5jby8xNjIxL2FydGljbGVzLTI0MTg4N19hcmNoaXZvX3BkZl9ldmFsdWFjaW9uLnBkZiIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciIpIE1pbmlzdGVyaW8gZGUgRWR1Y2FjacOzbiBOYWNpb25hbCBkZSBDb2xvbWJpYS4gKDIwMTApIE9yaWVudGFjaW9uZXMgUGVkYWfDs2dpY2FzIHBhcmEgbGEgRWR1Y2FjacOzbiBGw61zaWNhLCBSZWNyZWFjacOzbiB5IERlcG9ydGUgCgoKCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL3RlbXBsYXRlL2ljb25vLXl0LnN2ZycgOnN0eWxlPSJ7J21heC13aWR0aCc6JzE2cHgnfSIpCiAgICAgICAgICAgICAgYShocmVmPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PVNLLVJGNUVkbnJVIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIikgdW5pdmVyc2lkYWR1cmpjIFtAdW5pdmVyc2lkYWR1cmpjXS4gKDggZGUgbm92aWVtYnJlLCAyMDIyKS4gTGEgZWR1Y2FjacOzbiBmw61zaWNhLiBHcmFkbyBlbiBFZHVjYWNpw7NuIGluZmFudGlsLiAKCiAgICAgICAgICAuY29sLTEyLmNvbC1tZC02LmNvbC1sZy0zLm9mZnNldC1sZy0xCiAgICAgICAgICAgIGZpZ3VyZQogICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL21hdGVyaWFsLWNvbXBsZW1lbnRhcmlvLnN2ZycsIGFsdD0nJykKCg=="},null]}